name: Demo Setup

permissions:
  contents: write
  issues: write
  pull-requests: write

on:
  workflow_dispatch:
    inputs:
      name:
        type: string
        required: true
        description: 'The root name of the branches (number will be appended unless day-of).'
        default: basket-update
      go-time:
        type: boolean
        required: true
        description: 'Only check this for the day-of setup'
        default: false

run-name: Demo Setup ${{ inputs.name }}${{ inputs.go-time && '' || github.run_number }}

jobs:
  branch:
    name: branch ${{ matrix.branch }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        branch: ['a', 'b']

    env:
      BRANCH_NAME: "${{ inputs.name }}${{ matrix.branch }}${{ inputs.go-time && '' || github.run_number }}"
      COMMIT_MESSAGE: "update banner for weekend sale${{ inputs.go-time && '' || format(' ({0})', github.run_number) }}"
      PR_TITLE: "Banner update for weekend sale${{ inputs.go-time && '' || format(' ({0})', github.run_number) }}"

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.NOTHING_INTERESTING }}

      - name: git config
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: git checkout branch
        run: |
          git checkout -b $BRANCH_NAME

      - name: break it
        run: python3 .github/scripts/demo.py --branch ${{ matrix.branch }}

      - name: commit and push
        run: |
          git commit -a -m "$COMMIT_MESSAGE"
          git push origin $BRANCH_NAME

      - name: create PR
        run: gh pr create -B main -H $BRANCH_NAME --title "$PR_TITLE" --fill
        env:
          GITHUB_TOKEN: ${{ secrets.NOTHING_INTERESTING }}

  summary:
    name: summary
    runs-on: ubuntu-latest
    needs: branch
    if: always()

    env:
      PREFIX: ${{ inputs.name }}
      SUFFIX: ${{ inputs.go-time && '' || github.run_number }}

    steps:
      - name: setup
        run: |
          echo "Two branches (and PRs) have been created:" >> $GITHUB_STEP_SUMMARY
          echo "- $PREFIXa$SUFFIX (broken)" >> $GITHUB_STEP_SUMMARY
          echo "- $PREFIXb$SUFFIX (working)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "With the repo already cloned, set up your dev box by running:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```sh' >> $GITHUB_STEP_SUMMARY
          echo "git fetch" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Then, to work on the broken branch, run:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```sh' >> $GITHUB_STEP_SUMMARY
          echo "git switchc $PREFIXa$SUFFIX" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
