name: Test Environment

on:
  workflow_call:
    inputs:
      name:
        type: string
        required: true
        description: 'Environment name'
      type:
        type: string
        required: true
        description: 'Environment type'
      # url:
      #   type: string
      #   required: true
      #   description: 'Url of the website to test'
      # subscription:
      #   type: string
      #   description: 'Azure subscription id'
      # resource-group:
      #   type: string
      #   description: 'Azure resource group for storage account'

jobs:
  test:
    name: Test Environment
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    timeout-minutes: 60

    # environment: ${{ inputs.type }}

    steps:
      - uses: actions/checkout@v3

      # - name: Login to Azure (OIDC)
      #   if: ${{ inputs.resource-group != '' && inputs.subscription != ''  }}
      #   uses: azure/login@v1
      #   with:
      #     client-id: ${{ vars.AZURE_CLIENT_ID }}
      #     tenant-id: ${{ vars.AZURE_TENANT_ID }}
      #     subscription-id: ${{ inputs.subscription }}

      # - uses: actions/setup-node@v3
      #   with:
      #     node-version: 18

      # - name: Install dependencies
      #   run: npm ci

      # # - name: Install Playwright Browsers
      # #   run: npx playwright install --with-deps

      # - name: Run Playwright tests
      #   id: playwright
      #   # run: npx playwright test
      #   run: npx playwright test --config=playwright.service.config.ts --workers=40
      #   env:
      #     PLAYWRIGHT_SERVICE_ACCESS_TOKEN: ${{ secrets.PLAYWRIGHT_SERVICE_ACCESS_TOKEN }}
      #     PLAYWRIGHT_SERVICE_URL: ${{ vars.PLAYWRIGHT_SERVICE_URL }}
      #     PLAYWRIGHT_SERVICE_RUN_ID: ${{ inputs.name }}-${{ github.run_id }}-${{ github.run_attempt }}
      #     TESTING_WEBSITE_URL: ${{ inputs.url }}

      # - uses: actions/upload-artifact@v3
      #   if: always()
      #   with:
      #     name: playwright-report
      #     path: playwright-report/
      #     retention-days: 30

      # - name: Create Storage
      #   if: ${{ always() && inputs.resource-group != '' && inputs.subscription != '' }}
      #   id: storage
      #   run: |
      #     ACCOUNT_NAME=${ACCOUNT_NAME//-/}

      #     echo "Creating storage account '$ACCOUNT_NAME'"
      #     az storage account create --subscription "$SUBSCRIPTION" -g "$RESOURCE_GROUP" -n "$ACCOUNT_NAME" --sku Standard_RAGRS --public-network-access Enabled --allow-blob-public-access true

      #     echo "  Adding static website support..."
      #     az storage blob service-properties update --subscription "$SUBSCRIPTION" --account-name "$ACCOUNT_NAME" --static-website --index-document "index.html"

      #     echo " Uploading test results..."
      #     az storage blob upload-batch --subscription "$SUBSCRIPTION" -s ./playwright-report -d '$web' --account-name "$ACCOUNT_NAME"

      #     echo "  Getting test results endpoint..."
      #     test_result_endpoint=$( az storage account show --subscription "$SUBSCRIPTION" -g "$RESOURCE_GROUP" -n "$ACCOUNT_NAME" --query "primaryEndpoints.web" --output tsv )

      #     echo "Test results available at $test_result_endpoint"
      #     echo "url=$test_result_endpoint" >> $GITHUB_OUTPUT
      #   env:
      #     ACCOUNT_NAME: ${{ inputs.name }}${{ github.run_id }}${{ github.run_attempt }}
      #     RESOURCE_GROUP: ${{ inputs.resource-group }}
      #     SUBSCRIPTION: ${{ inputs.subscription }}
      - name: Run Playwright tests
        id: playwright
        # run: npx playwright test
        run: echo "npx playwright test --config=playwright.service.config.ts --workers=40"

      - name: Create Storage
        id: storage
        run: |
          test_result_endpoint="https://cipr70igntdmo68270888951.z20.web.core.windows.net/"
          echo "url=$test_result_endpoint" >> $GITHUB_OUTPUT

      - name: Result

        run: |
          echo "### Playwright tests ${{ steps.playwright.outcome == 'failure' && 'failed :rotating_light:' || 'passed :white_check_mark:' }}" >> $GITHUB_STEP_SUMMARY
          echo "- View the [full test results](${{ steps.storage.outputs.url }})" >> $GITHUB_STEP_SUMMARY
          echo "- View activities in [Microsoft Playwright Service](${{ vars.PLAYWRIGHT_SERVICE_PORTAL }})" >> $GITHUB_STEP_SUMMARY

      - name: Add Link to Pull Request
        if: ${{ always() && github.event_name == 'pull_request' && github.event.action == 'opened' }}
        uses: actions/github-script@v6
        with:
          script: |
            const testUrl = '${{ steps.storage.outputs.url }}'
            const results = '${{ steps.playwright.outcome == 'failure' && 'failed :rotating_light:' || 'passed :white_check_mark:' }}'
            const portalUrl = '${{ vars.PLAYWRIGHT_SERVICE_PORTAL }}'

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `### Playwright tests ${results}\n- View the [full test results](${testUrl})\n- View activities in [Microsoft Playwright Service](${portalUrl})`
            });
